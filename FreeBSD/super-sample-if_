#!/usr/bin/env python2.7
import os
import sys
import re
import time
#import pickledb
import subprocess as sp

try:
  input = sys.argv[1]
except:
  input = 0

FNULL = open(os.devnull, 'w')

progname = os.path.basename(__file__)
INTERFACE = progname.split('_')


if input == "autoconf":
   print "yes"
   sys.exit(0)
elif input == "config":
   print 'graph_title '+INTERFACE[1]+' traffic'
   print 'graph_order rbytes obytes'
   print 'graph_args --base 1000'
   print 'graph_vlabel bits per ${graph_period} in (-) / out (+)'
   print 'graph_category network'
   print 'graph_info This graph shows the traffic of the '+ INTERFACE[1]+' network interface.'
   print 'rbytes.label received'
   print 'rbytes.type DERIVE'
   print 'rbytes.graph no'
   print 'update_rate 30'
   print 'rbytes.cdef rbytes,8,*'
   print 'rbytes.min 0'
   print 'obytes.label bps'
   print 'obytes.type DERIVE'
   print 'obytes.negative rbytes'
   print 'obytes.cdef obytes,8,*'
   print 'obytes.min 0'
   print 'obytes.info Traffic sent (+) and received (-) on the '+INTERFACE[1]+' network interface. '
   sys.exit(0)
else:
   proc = sp.Popen('/usr/bin/netstat  -n -I '+INTERFACE[1], shell=True, stdout=sp.PIPE, stderr=FNULL)
   output = proc.stdout.read()
   #db = pickledb.load('/tmp/'+INTERFACE[1]+'-stats.db', False)
   linesplit  = re.split('\n', output)
   valsplit = re.split('Link[0-9].+', linesplit[1])
   data = valsplit[0].split( )
   nsq = {int(time.time()): {'in':data[4],'out':data[7]}}


   for key,values in nsq.items():
      for k,v in values.items():
          if k == 'in':
             direction = 'rbytes'
          else:
             direction = 'obytes'
          print '{0}{1} {2}{3}{4}'.format(direction,'.value',key,':',v)
